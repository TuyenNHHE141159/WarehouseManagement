<!DOCTYPE html>

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
   <style>
       .form-control{
       width: auto; 
       max-width: 300px;
       }
   </style>
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <!-- Thư viện jQuery -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <div class="container">
    @Html.Partial("~/Views/Header/Header.cshtml")
    <div class="card-body">
    <div class="card-header">
        <h3 class="card-title">Thêm Đơn Hàng</h3>
    </div>
    </div>
    <form id="order-form">
        <table style="width:70%">
            <tr>
                <td>Kiểu:</td>
                <td>
                    <select id="select" style="width:fit-content" class="form-select">
                        <option value="import">Nhập kho</option>
                        <option value="export">Xuất kho</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td><label for="product">Sản phẩm:</label></td>
                <td> <input type="text" class="form-control" id="product" placeholder="dell,pc,..." ></td>
            </tr>
            <tr>
                <td><label for="price">Giá:</label></td>
                <td><input type="text" class="form-control" id="price" min="1" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" value="" data-type="currency" placeholder="10.000 VNĐ" required></td>
            </tr>
            <tr>
                <td>  <label for="quantity">Số lượng:</label></td>
                <td> <input placeholder="đơn vị sản phẩm" class="form-control" type="number" id="quantity" min="1" step="1" pattern="[0-9]+" required></td>
            </tr>

            <input type="hidden" id="productIdHidden" name="productIdHidden">
        </table>
        <br />
        <button type="button" class="btn btn-success" onclick="addOrder()">Thêm</button>
    </form>
    <table id="order-table" class="table" style="width:100%">
        <thead class="table-light">
            <tr>
                <th>Sản phẩm</th>
                <th>Giá(VNĐ)</th>
                <th>Số lượng</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    Tổng tiền: <input readonly id="cost" name="cost" class="form-control">
    <br />
    <button id="submitOrder" class="btn btn-success">Lưu</button>
    </div>


<script>
    const productList = [];
    const productIdInput = document.getElementById('product');
    const productIdInputHidden = document.getElementById('productIdHidden');
    var cost=0;
    productIdInput.addEventListener("input", function (event) {
        const keyword = event.target.value;

        $.ajax({
            url: "/Order/GetProducts",
            type: "GET",
            data: { keyword: keyword },
            success: function (response) {
                // Xử lý kết quả trả về
                console.log(response);
                $("#product").autocomplete({
                    source: response,
                    select: function (event, ui) {
                        // Cập nhật giá trị của ô input "productId" với giá trị "label" của phần tử được chọn
                        $("#product").val(ui.item.label.trim());
                        productIdInputHidden.value = ui.item.value;
                        $("#productIdHidden").val(ui.item.value);
                        console.log(productIdInputHidden.value);
                        return false;
                    }
                });
            },
            error: function () {
                // Xử lý lỗi
                console.log("Error");
            },
        });
    });
    function addOrder() {
        // Lấy thông tin sản phẩm, giá và số lượng từ form
        var product = document.getElementById("product").value;
        var price = document.getElementById("price").value;
        priceReal = parseInt(price.replace(/,/g, ''));
        var quantity = document.getElementById("quantity").value;
     
        // Kiểm tra nếu có bất kỳ trường nào trống thì hiển thị thông báo và dừng hàm
        if (!product || !price || !quantity) {
            alert("Vui lòng nhập đầy đủ thông tin đơn hàng");
           
        }
        else if (productIdHidden.value==="") {
            document.getElementById("product").value = "";
            document.getElementById("price").value = "";
            document.getElementById("quantity").value = "";
            alert("Sản phẩm ko tồn tại");
        }
        else {        
            const producto = {
                productId: productIdHidden.value,
                quantity: quantity,
                price: priceReal
            };
            console.log("Product đc thêm có id " + productIdHidden.value);
            productList.push(producto);
            // Tạo một hàng mới cho bảng
            var row = document.createElement("tr");

            // Thêm các ô cho hàng
            var productCell = document.createElement("td");
            productCell.textContent = product;
            row.appendChild(productCell);

            var priceCell = document.createElement("td");
            priceCell.textContent = price;
            row.appendChild(priceCell);

            var quantityCell = document.createElement("td");
            quantityCell.textContent = quantity;
            row.appendChild(quantityCell);

            // Thêm hàng vào bảng
            var table = document.getElementById("order-table").getElementsByTagName("tbody")[0];
            table.appendChild(row);

            // Xóa các giá trị khỏi form
            document.getElementById("product").value = "";
            document.getElementById("price").value = "";
            document.getElementById("quantity").value = "";
            //tính tổng tiền
            cost += priceReal*quantity;
            const formattedNumber = cost.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            $("#cost").val(formattedNumber);
        }
    }
    var selectElement = document.getElementById("select");
    var selectedItem = selectElement.value;
    $(document).ready(function () {
        // Bắt sự kiện khi thay đổi giá trị trong thẻ select
        $("#select").change(function () {
            // Lấy giá trị được chọn
            selectedItem = $(this).val();
            // Xử lý giá trị được chọn
            console.log("Giá trị được chọn là: " + selectedItem);
        });
    });
    $(document).ready(function () {
        // Bắt sự kiện click vào nút "Lưu"
        $("#submitOrder").click(function () {
            console.log("Type " + selectedItem);
            // Gửi request POST đến URL "/Order/Save" với dữ liệu là productList
            $.ajax({
                url: "/Order/Save",
                type: "POST",
                data: JSON.stringify({ orderDetails: productList, selectedItem: selectedItem }),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    // Xử lý kết quả trả về từ server (nếu cần)
                    console.log("controller trả về" + response);
                    alert("Thêm thành công");
                    window.location.href = "/Order/Index";
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi
                    alert("Lưu không thành công");
                    console.log("Lỗi: " + error);
                    console.log(xhr.responseText);
                }
            });
        });
    });

    $("input[data-type='currency']").on({
        keyup: function () {
            formatCurrency($(this));
        },
        blur: function () {
            formatCurrency($(this), "blur");
        }
    });


    function formatNumber(n) {
        // format number 1000000 to 1,234,567
        return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    }


    function formatCurrency(input, blur) {
        // appends $ to value, validates decimal side
        // and puts cursor back in right position.

        // get input value
        var input_val = input.val();

        // don't validate empty input
        if (input_val === "") { return; }

        // original length
        var original_len = input_val.length;

        // initial caret position
        var caret_pos = input.prop("selectionStart");

        // check for decimal
        if (input_val.indexOf(".") >= 0) {

            // get position of first decimal
            // this prevents multiple decimals from
            // being entered
            var decimal_pos = input_val.indexOf(".");

            // split number by decimal point
            var left_side = input_val.substring(0, decimal_pos);
            var right_side = input_val.substring(decimal_pos);

            // add commas to left side of number
            left_side = formatNumber(left_side);

            // validate right side
            right_side = formatNumber(right_side);

            // On blur make sure 2 numbers after decimal
            if (blur === "blur") {
                right_side += "00";
            }

            // Limit decimal to only 2 digits
            right_side = right_side.substring(0, 2);

            // join number by .
            input_val =  left_side + "." + right_side;

        } else {
            // no decimal entered
            // add commas to number
            // remove all non-digits
            input_val = formatNumber(input_val);
            input_val = input_val;

            // final formatting
            if (blur === "blur") {
                input_val += "";
            }
        }

        // send updated string to input
        input.val(input_val);

        // put caret back in the right position
        var updated_len = input_val.length;
        caret_pos = updated_len - original_len + caret_pos;
        input[0].setSelectionRange(caret_pos, caret_pos);
    }

</script>
